// Các thao tác trên âm tiết là 1 chuỗi ký tự utf-8 bao gồm:
//
// - Dùng `bytes_in_set` để đánh dấu nguyên âm ascii `qrtpdghklxcvbnm` (16 chars)
//
// - toLower(): convert thành toàn bộ âm thường
//
// - utf8Mark(): để đánh dấu bytes thuộc utf-8

const std = @import("std");

pub fn main() void {
    // const c: []const []const u8 = &.{ "é", "ý", "ú", "í", "ó", "á", "ế", "ứ", "ớ", "ố", "ắ", "ấ", "è", "ỳ", "ù", "ì", "ò", "à", "ề", "ừ", "ờ", "ồ", "ằ", "ầ", "ẻ", "ỷ", "ủ", "ỉ", "ỏ", "ả", "ể", "ử", "ở", "ổ", "ẳ", "ẩ", "ẽ", "ỹ", "ũ", "ĩ", "õ", "ã", "ễ", "ữ", "ỡ", "ỗ", "ẵ", "ẫ", "ẹ", "ỵ", "ụ", "ị", "ọ", "ạ", "ệ", "ự", "ợ", "ộ", "ặ", "ậ" };
    const c: []const []const u8 = &.{ "Ư", "ư", "ậ", "Ạ", "Ậ", "Ỳ", "Ỷ", "Ỹ", "Ỵ" };
    for (c) |s| {
        if (s.len == 2) {
            std.debug.print("'{s}'{d}:{d} ", .{ s, s[0], s[1] });
        } else {
            std.debug.print("'{s}'{d}:{d}:{d} ", .{ s, s[0], s[1], s[2] });
        }
    }

    std.debug.print("\n\n", .{});
    const d: []const u8 = &.{225};
    for (d) |x| {
        std.debug.print("{b}\n", .{x});
    }
}

// Nhìn vào mã hóa đầy đủ của các ký tự có dấu trong tiếng Việt. Thấy hoàn toàn có cách lọc nhanh xem ký tự này có tone hay ko? Hoặc với 1 kt đầu vào dùng range ( <, >) là có thể lọc được xem ký tự đó ứng với khoảng các ký tự nào?

// A/ bit thứ 5 = 0 là viết hoa, 1 là viết thường
// [ 32 elems ]
// 'À'195:128 'Á'195:129 'Â'195:130 'Ã'195:131
// 'È'195:136 'É'195:137 'Ê'195:138
// 'Ì'195:140 'Í'195:141
// 'Ò'195:146 'Ó'195:147 'Ô'195:148 'Õ'195:149
// 'Ù'195:153 'Ú'195:154
// 'Ý'195:157
// 'à'195:160 'á'195:161 'â'195:162 'ã'195:163
// 'è'195:168 'é'195:169 'ê'195:170
// 'ì'195:172 'í'195:173
// 'ò'195:178 'ó'195:179 'ô'195:180 'õ'195:181
// 'ù'195:185 'ú'195:186
// 'ý'195:189

// B/ bit thấp nhất = 0 là viết hoa, 1 là viết thường trừ trường hợp Ưư
// [ 12 elems ]
// 'Ă'196:130 'ă'196:131 'Đ'196:144 'đ'196:145 'Ĩ'196:168 'ĩ'196:169
// 'Ũ'197:168 'ũ'197:169
// 'Ơ'198:160 'ơ'198:161
// 'Ư'198:175 'ư'198:176 // bit thấp nhất = 1 là viết hoa, 0 là viết thường
//
//
// C/ bit thấp nhất = 0 là viết hoa, 1 là viết thường trừ trường hợp Ưư
// => toLower = set bit thấp nhất thành 1
// - - - - - - - -
// 225:186:160-191
// 225:187:128-185
// - - - - - - - -
// 'Ạ'225:186:160 'ạ'225:186:161 'Ả'225:186:162 'ả'225:186:163
// 'Ấ'225:186:164 'ấ'225:186:165 'Ầ'225:186:166 'ầ'225:186:167
// 'Ẩ'225:186:168 'ẩ'225:186:169 'Ẫ'225:186:170 'ẫ'225:186:171
// 'Ậ'225:186:172 'ậ'225:186:173 'Ắ'225:186:174 'ắ'225:186:175
// 'Ằ'225:186:176 'ằ'225:186:177 'Ẳ'225:186:178 'ẳ'225:186:179
// 'Ẵ'225:186:180 'ẵ'225:186:181 'Ặ'225:186:182 'ặ'225:186:183
// 'Ẹ'225:186:184 'ẹ'225:186:185 'Ẻ'225:186:186 'ẻ'225:186:187
// 'Ẽ'225:186:188 'ẽ'225:186:189 'Ế'225:186:190 'ế'225:186:191
// 'Ề'225:187:128 'ề'225:187:129 'Ể'225:187:130 'ể'225:187:131
// 'Ễ'225:187:132 'ễ'225:187:133 'Ệ'225:187:134 'ệ'225:187:135
// 'Ỉ'225:187:136 'ỉ'225:187:137 'Ị'225:187:138 'ị'225:187:139
// 'Ọ'225:187:140 'ọ'225:187:141 'Ỏ'225:187:142 'ỏ'225:187:143
// 'Ố'225:187:144 'ố'225:187:145 'Ồ'225:187:146 'ồ'225:187:147
// 'Ổ'225:187:148 'ổ'225:187:149 'Ỗ'225:187:150 'ỗ'225:187:151
// 'Ộ'225:187:152 'ộ'225:187:153 'Ớ'225:187:154 'ớ'225:187:155
// 'Ờ'225:187:156 'ờ'225:187:157 'Ở'225:187:158 'ở'225:187:159
// 'Ỡ'225:187:160 'ỡ'225:187:161 'Ợ'225:187:162 'ợ'225:187:163
// 'Ụ'225:187:164 'ụ'225:187:165 'Ủ'225:187:166 'ủ'225:187:167
// 'Ứ'225:187:168 'ứ'225:187:169 'Ừ'225:187:170 'ừ'225:187:171
// 'Ử'225:187:172 'ử'225:187:173 'Ữ'225:187:174 'ữ'225:187:175
// 'Ự'225:187:176 'ự'225:187:177 'Ỳ'225:187:178 'ỳ'225:187:179
// 'Ỵ'225:187:180 'ỵ'225:187:181 'Ỷ'225:187:182 'ỷ'225:187:183
// 'Ỹ'225:187:184 'ỹ'225:187:185

//
// [ ký-tự:số-bytes-thực-tế ]
//
// à2 á2 ã2 â2 ă2 è2 é2 ê2 ì2 í2 ị3 ỉ3 ĩ2 ò2 ó2 ọ3 ỏ3 õ2 ô2 ơ2 ù2 ú2 ụ3 ủ3 ũ2 ư2 ỳ3 ý2 ỵ3 ỷ3 ỹ3 ạ3 ả3 ẹ3 ẻ3 ẽ3 a1 A1 đ2 Đ2 Ầ3 Ấ3 Ậ3 Ẩ3 Ẫ3 Ằ3 Ắ3 Ặ3 Ẳ3 Ẵ3 Ề3 Ế3 Ệ3 Ể3 Ễ3 Ồ3 Ố3 Ộ3 Ổ3 Ỗ3 Ờ3 Ớ3 Ợ3 Ở3 Ỡ3 Ừ3 Ứ3 Ự3 Ử3 Ữ3 ầ3 ấ3 ậ3 ẩ3 ẫ3 ằ3 ắ3 ặ3 ẳ3 ẵ3 ề3 ế3 ệ3 ể3 ễ3 ồ3 ố3 ộ3 ổ3 ỗ3 ờ3 ớ3 ợ3 ở3 ỡ3 ừ3 ứ3 ự3 ử3 ữ3
//
// => Đủ chỗ để ghi đè lên dòng bytes utf-8 đầu vào mã hóa thay thế ascii-telex, dồn hết ký tự về cuối hoặc đầu tùy vào vị trí delimiters (ở đây là \s\t\n) ở trái hay phải âm tiết, ô nào thừa ghi đè ký tự space (32) vào. Làm như vậy ko phải cấp phát dữ liệu mới, ko phải copy dữ liệu từ đầu vào sang đầu ra.
//
// Ngoài space có thể tham khảo việc dùng các ký tự vô hình khác ở https://emptycharacter.com
